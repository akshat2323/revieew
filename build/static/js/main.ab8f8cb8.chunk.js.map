{"version":3,"sources":["components/movieList.js","components/MovieHeading.js","components/SearchBox.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","movies","map","movie","index","className","src","Poster","alt","Title","Year","Type","MovieHeading","heading","SearchBox","value","onChange","event","setSearch","target","placeholder","type","Home","useState","setmovies","search","getMovieRequest","a","url","fetch","response","json","resJson","Search","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA4BeA,EAzBG,SAACC,GACf,OACI,mCACKA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAEd,sBAAKC,UAAU,+EAAf,UACI,qBAAKC,IAAKH,EAAMI,OAAQC,IAAI,gBAC5B,sBAAKH,UAAU,cAAf,UAEA,6BAAKF,EAAMM,QACX,6BAAKN,EAAMO,OACX,6BAAKP,EAAMQ,UAEX,qBAAKN,UAAU,sECLpBO,EARM,SAACZ,GAClB,OACI,qBAAKK,UAAU,GAAf,SACI,6BAAKL,EAAMa,aCKRC,EATG,SAACd,GACf,OACI,qBAAKK,UAAU,eAAf,SACI,uBAAOA,UAAU,eAAeU,MAAOf,EAAMe,MAC7CC,SAAU,SAACC,GAAD,OAAUjB,EAAMkB,UAAUD,EAAME,OAAOJ,QAAQK,YAAY,oBAAoBC,KAAK,YCkC3FC,G,MAjCF,WACT,MAA4BC,mBAAS,IAArC,mBAAOtB,EAAP,KAAeuB,EAAf,KAEA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeP,EAAf,KAGMQ,EAAe,uCAAM,WAAOD,GAAP,mBAAAE,EAAA,6DACjBC,EADiB,oCACkBH,EADlB,6BAGAI,MAAMD,GAHN,cAGjBE,EAHiB,gBAIDA,EAASC,OAJR,QAIjBC,EAJiB,QAKZC,QAEPT,EAAUQ,EAAQC,QAPC,2CAAN,sDAerB,OAJAC,qBAAU,WACNR,EAAgBD,KACjB,CAACA,IAEI,sBAAKpB,UAAU,4BAAf,UACJ,sBAAKA,UAAU,8DAAf,UACA,cAAC,EAAD,CAAcQ,QAAQ,WACtB,cAAC,EAAD,CAAWY,OAAQA,EAAQP,UAAWA,OAEtC,qBAAKb,UAAU,MAAf,SACA,cAAC,EAAD,CAAWJ,OAAUA,WCvBdkC,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab8f8cb8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n        <>\r\n            {props.movies.map((movie, index) =>\r\n\r\n                <div className='image-container d-flex justify-content-center align-items-center flex-column'>\r\n                    <img src={movie.Poster} alt=\"movie.Title\" />\r\n                    <div className='flex-column'>\r\n\r\n                    <h1>{movie.Title}</h1>\r\n                    <h3>{movie.Year}</h3>\r\n                    <h5>{movie.Type}</h5>\r\n                    </div>\r\n                    <div className='overlay d-flex align-items-center justify-content-center'></div>\r\n\r\n                </div>\r\n                \r\n\r\n            )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\n\r\n\r\nconst MovieHeading = (props) =>{\r\n    return (\r\n        <div className=\"\">\r\n            <h1>{props.heading}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieHeading;","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div className=\"col col-sm-4\">\r\n            <input className=\"form-control\" value={props.value} \r\n            onChange={(event)=> props.setSearch(event.target.value)} placeholder=\"search your movie\" type=\"text\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React,{useEffect, useState} from \"react\";\r\nimport MovieList from \"./movieList\";\r\nimport MovieHeading from \"./MovieHeading\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport './home.css'\r\n\r\n\r\nconst Home = () => {\r\n    const [movies, setmovies] = useState([]);\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n\r\n    const getMovieRequest =  ( async (search)=>{\r\n        const url = `http://www.omdbapi.com/?s=${search}&apikey=6e464c4a`;\r\n\r\n        const response = await fetch(url);\r\n        const resJson = await response.json();\r\n        if(resJson.Search){\r\n\r\n            setmovies(resJson.Search);\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getMovieRequest(search);\r\n    }, [search]);\r\n\r\n    return( <div className='container-fluid movie-app'>\r\n        <div className=\"d-flex justify-content-between align-items-center mt-4 mb-4\">\r\n        <MovieHeading heading=\"Movies\"/>\r\n        <SearchBox search={search} setSearch={setSearch}/>\r\n        </div>\r\n        <div className='row'>\r\n        <MovieList movies = {movies}/>\r\n            </div>\r\n    </div> )\r\n    \r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './components/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}